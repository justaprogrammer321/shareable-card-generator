<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flipping Card</title>
    <style>
        body{
            background-image: url('/images/background.jpg');
            overflow: hidden;
            background-size: cover;
            background-position: center;
        }
        .container {
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            perspective: 5000px;
            z-index: 1;
        }

        .card {
            position: relative;
            width:400px;
            height: 600px;
            transform-style: preserve-3d;
            transition: transform 1.5s;
        }
        .card1 {
            position: relative;
            width:400px;
            height: 600px;
            transform-style: preserve-3d;
            transition: transform 1.5s;
        }

        .card-inner {
            position: absolute;
            width: 100%;
            height: 100%;
            text-align: center;
            transition: transform 1.5s;
            transform-style: preserve-3d;
            transform-origin: left;
        }

        .card.flipped .card-inner {
            transform: rotateY(-180deg);
            transform-origin: left;
            background-color: #fff;
        }

        .card-front,
        .card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            color: #fff;
            background-size: cover;
            background-position: center;
            background-color: #fff;
        }

        .card .card-front img{
            width: fit-content;
        }

        .card-front {
            background-color: rgb(106, 218, 246);
        }

        .card1 .card-front {
            background-color: rgb(144, 211, 228);
            display: flex;
            flex-direction: column;
            justify-content:flex-start ;

            width: 100%;
        }
        .card1 .card-front h2{
            align-items: flex-start;
        }
        .card-back {
            background-color: #46a0ee;
            transform: rotateY(180deg);
        }

        .second-container {
            position: absolute;
            transition: transform 1.5s;
            z-index: 1;
            perspective: 5000px;
        }

        .flipped-card {
        transform: translateX(100%) rotateY(-80deg);
        transform-origin: left;
        }
        .flipped-card-back {
            transform-origin: left;
        }
        #Main {
            display: flex;
            align-items: center;
            height: 100vh;
            position: relative;
            justify-content: center;
            
            animation: slideUp 4s ease 1;
        }

        @keyframes slideUp {
            0% {
                transform: translateY(100%);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }
    @media screen and (max-width: 400px) {
                .card,
                .card1 {
                    width: 300px;
                    height: 450px;
                }
            }

   h2{
    display: flex;
    width: 80%;
    padding-top: 20px;
    box-sizing: border-box;
    margin-top: 30px;
    font-size: 18px;
    z-index: 3;
    background-color: transparent;
    color: rgb(0, 0, 0);
    outline: none; /* Removes the focus border */
    border: none;
    word-wrap: break-word;
}
p{
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    margin-top: 30px;
    width: 80%;
    box-sizing: border-box;
    font-size: 15px;
    z-index: 3;
    background-color: transparent;
    color: rgb(0, 0, 0);
    border: none;
    word-wrap: break-word;
    resize: none; /* Prevents resizing */
}

.custom-file-upload {
    border: 1px solid #ccc;
    display: inline-block;
    padding: 6px 12px;
    cursor: pointer;
}

.custom-file-upload::before {
    content: 'Upload Image';
}

.custom-file-upload:hover {
    background: #f1f1f1;
}
.card-back img{
    max-width: 100%; /* Set maximum width to prevent overflow */
    max-height: 100%; /* Set maximum height to prevent overflow */
    object-fit: cover;
}
    </style>
    <!-- <style>
        .backgroundconfetti{
            top: 0;
            left: 0;
            position: absolute;
            z-index: -1;
        }
            *{
            margin: 0;
            padding: 0;
        }
        @keyframes confetti-slow {
            0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); }
            100% { transform: translate3d(25px, 105vh, 0) rotateX(360deg) rotateY(180deg); }
        }

        @keyframes confetti-medium {
            0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); }
            100% { transform: translate3d(100px, 105vh, 0) rotateX(100deg) rotateY(360deg); }
        }

        @keyframes confetti-fast {
            0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); }
            100% { transform: translate3d(-50px, 105vh, 0) rotateX(10deg) rotateY(250deg); }
        }
     
        @keyframes fadeOut {
            0% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }

        .text-container div{
            display: flex;
            justify-content: center;
            align-items: center;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 3;
            font-size: 24px;
            animation: fadeOut 2s ease 1;
        }
        .container-box {
            width: 100vw;
            height: 100vh;
            background: #f0f0f000;
            z-index: 4;
        }

        .confetti-container {
            perspective: 700px;
            position: absolute;
            overflow: hidden;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }

        .confetti {
            position: absolute;
            z-index: 1;
            top: -10px;
            border-radius: 0%;
        }

        .confetti--animation-slow {
            animation: confetti-slow 2.25s linear 1 forwards;
        }

        .confetti--animation-medium {
            animation: confetti-medium 1.75s linear 1 forwards;
        }

        .confetti--animation-fast {
            animation: confetti-fast 1.25s linear 1 forwards;
        }
    </style> -->

</head>

<body>
<div id="Main">
    <div class="container" style=" z-index: 1;">
        <div class="card" onclick="handleFlip(this)">
            <div class="card-inner">
                <div class="card-front" style="background-image: url('/images/this.png')"></div>
                <div class="card-back" id="imgpreview">
                    <% if (note.imageData && note.imageContentType) { %>
                        <img src="data:<%= note.imageContentType %>;base64,<%= note.imageData.toString('base64') %>" alt="<%= note.title %>">
                     <% } %>
                </div>                
            </div>
        </div>
    </div>
    <div class="second-container" style=" z-index: 0;">
        <div class="card1">
            <div class="card-inner">
                <div class="card-front">
                       <h2 class="title"><%= note.title %></h2>
                       <p><%= note.content %></p>
                </div>
            </div>
        </div>
    </div>
</div>
    <script>
    let isFlipped = false;

    function handleFlip(card) {
        if (!isFlipped) {
            isFlipped = true;
            card.classList.add('flipped');
            if (card.classList.contains('flipped')) {
                const width = card.offsetWidth;
                setTimeout(() => {
                    card.style.transform = `translateX(${width}px)`;
                    const secondCard = document.querySelector('.card1');
                    secondCard.classList.add('flipped-card');
                    secondCard.style.zIndex = 2; // Adjusting the z-index
                    document.addEventListener('click', handleSecondFlip);
                }, 1500); // Delay in milliseconds
            }
        }
    }

    function handleSecondFlip() {
        const secondCard = document.querySelector('.second-container');
        const width = secondCard.offsetWidth;
        secondCard.style.zIndex=2
        const card1 = document.querySelector('.card1');
        card1.classList.add('flipped-card-back');
        card1.classList.remove('flipped-card');
        const firstCard = document.querySelector('.card');
        firstCard.style.transform = `rotateY(80deg)`;
        firstCard.style.transformOrigin = `left`;
        document.removeEventListener('click', handleSecondFlip);
        document.addEventListener('click', handleThirdFlip);
    }

    function handleThirdFlip() {
        const firstCard = document.querySelector('.card');
        firstCard.style.transform = 'none';
        firstCard.classList.remove('flipped');
        const card1 = document.querySelector('.card1');
        card1.classList.remove('flipped-card-back');
        const secondCard = document.querySelector('.second-container');
        secondCard.style.zIndex = 0; // Adjusting the z-index back to 0
        document.removeEventListener('click', handleThirdFlip);
        isFlipped = false;
    }

    // Function to slide up and change z-index
    function slideUpAndChangeZIndex() {
        var mainContainer = document.getElementById('Main');
        mainContainer.style.animation = 'slideUp 2s ease 1';
        mainContainer.addEventListener('animationend', function () {
            mainContainer.style.zIndex = '1';
            var boxContainerConfetti = document.getElementsByClassName('container-box')[0];
            boxContainerConfetti.style.zIndex = '-1';
        });
    }
</script>
<div class="backgroundconfetti">
<div class="text-container">
    <div style="color: #fff;">One of loved ones has sent you this</div>
</div>
<div class="js-container container-box"></div>
</div>
<script>
    function Confettiful(el) {
        this.el = el;
        this.containerEl = null;

        this.confettiFrequency = 3;
        this.confettiColors = ['#fce18a', '#ff726d', '#b48def', '#f4306d'];
        this.confettiAnimations = ['slow', 'medium', 'fast'];

        this._setupElements();
        this._fadeInText();
    }

    Confettiful.prototype._setupElements = function () {
        const containerEl = document.createElement('div');
        const elPosition = this.el.style.position;

        if (elPosition !== 'relative' || elPosition !== 'absolute') {
            this.el.style.position = 'relative';
        }

        containerEl.classList.add('confetti-container');

        this.el.appendChild(containerEl);

        this.containerEl = containerEl;
    };

    Confettiful.prototype._fadeInText = function () {
        const textEl = document.querySelector('.text-container div');
        textEl.style.animation = 'fadeOut 4s ease 1';
        setTimeout(() => {
            textEl.style.display = 'none';
            this._renderConfetti();
        }, 4000);
    }

    Confettiful.prototype._renderConfetti = function () {
        this.confettiInterval = setInterval(() => {
            const confettiEl = document.createElement('div');
            const confettiSize = (Math.floor(Math.random() * 3) + 7) + 'px';
            const confettiBackground = this.confettiColors[Math.floor(Math.random() * this.confettiColors.length)];
            const confettiLeft = (Math.floor(Math.random() * this.el.offsetWidth)) + 'px';
            const confettiAnimation = this.confettiAnimations[Math.floor(Math.random() * this.confettiAnimations.length)];

            confettiEl.classList.add('confetti', 'confetti--animation-' + confettiAnimation);
            confettiEl.style.left = confettiLeft;
            confettiEl.style.width = confettiSize;
            confettiEl.style.height = confettiSize;
            confettiEl.style.backgroundColor = confettiBackground;

            confettiEl.removeTimeout = setTimeout(function () {
                confettiEl.parentNode.removeChild(confettiEl);
            }, 3000);

            this.containerEl.appendChild(confettiEl);
        }, 25);
    };

    window.confettiful = new Confettiful(document.querySelector('.js-container'));
</script>

</body>

</html>

